{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Codes/Projects/X_dApp/src/components/Tweets.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"../stylesheet/style.css\";\nimport deleteLogo from '../images/delete.png';\nimport editLogo from '../images/edit.png';\nimport saveLogo from '../images/save.png';\nimport cancelLogo from '../images/cancel.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = _ref => {\n  _s();\n  let {\n    tweets,\n    shortAddress,\n    account,\n    deleteTweet,\n    editTweet\n  } = _ref;\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const handleEdit = (tweetId, content) => {\n    if (account !== tweets.find(tweet => tweet.id === tweetId).author) {\n      console.error(\"You can only edit your own tweets.\");\n      return;\n    }\n    setEditMode(tweetId);\n    setNewContent(content);\n  };\n  const handleSaveEdit = tweetId => {\n    if (editMode !== tweetId) return; // Ensure only the intended tweet is edited\n    editTweet(tweetId, newContent);\n    setEditMode(null);\n    setNewContent(\"\");\n  };\n  const renderEditButtons = tweet => {\n    if (editMode === tweet.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(tweet.id, tweet.content),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editLogo,\n            alt: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTweet(tweet.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deleteLogo,\n            alt: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweetsContainer\",\n    children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"user-icon\",\n        src: \"https://api.multiavatar.com/\".concat(tweet.author, \".svg\"),\n        alt: \"User Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: tweet.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), editMode === tweet.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newContent,\n            onChange: e => setNewContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveEdit(tweet.id),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: saveLogo,\n              alt: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditMode(null),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cancelLogo,\n              alt: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: tweet.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), account === tweet.author && renderEditButtons(tweet)]\n    }, tweet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"XC8L88Fw1kXM7O7Q70c5/I+RdN0=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["useState","deleteLogo","editLogo","saveLogo","cancelLogo","jsxDEV","_jsxDEV","Tweets","_ref","_s","tweets","shortAddress","account","deleteTweet","editTweet","editMode","setEditMode","newContent","setNewContent","handleEdit","tweetId","content","find","tweet","id","author","console","error","handleSaveEdit","renderEditButtons","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","concat","displayName","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/nithin/Codes/Projects/X_dApp/src/components/Tweets.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"../stylesheet/style.css\";\nimport deleteLogo from '../images/delete.png';\nimport editLogo from '../images/edit.png';\nimport saveLogo from '../images/save.png';\nimport cancelLogo from '../images/cancel.png';\n\nconst Tweets = ({ tweets, shortAddress, account, deleteTweet, editTweet }) => {\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n\n  const handleEdit = (tweetId, content) => {\n    if (account !== tweets.find(tweet => tweet.id === tweetId).author) {\n      console.error(\"You can only edit your own tweets.\");\n      return;\n    }\n    setEditMode(tweetId);\n    setNewContent(content);\n  };\n\n  const handleSaveEdit = (tweetId) => {\n    if (editMode !== tweetId) return; // Ensure only the intended tweet is edited\n    editTweet(tweetId, newContent);\n    setEditMode(null);\n    setNewContent(\"\");\n  };\n\n  const renderEditButtons = (tweet) => {\n    if (editMode === tweet.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return (\n        <div className=\"tweet-actions\">\n          <button onClick={() => handleEdit(tweet.id, tweet.content)}>\n            <img src={editLogo} alt=\"Edit\" />\n          </button>\n          <button onClick={() => deleteTweet(tweet.id)}>\n            <img src={deleteLogo} alt=\"Delete\" />\n          </button>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"tweetsContainer\">\n      {tweets.map((tweet) => (\n        <div key={tweet.id} className=\"tweet\">\n          <img\n            className=\"user-icon\"\n            src={`https://api.multiavatar.com/${tweet.author}.svg`}\n            alt=\"User Icon\"\n          />\n          <div className=\"tweet-inner\">\n            <div className=\"author\">{tweet.displayName}</div>\n            {editMode === tweet.id ? (\n              <div className=\"editArea\">\n                <textarea\n                  value={newContent}\n                  onChange={(e) => setNewContent(e.target.value)}\n                />\n                <button onClick={() => handleSaveEdit(tweet.id)}>\n                  <img src={saveLogo} alt=\"Save\" />\n                </button>\n                <button onClick={() => setEditMode(null)}>\n                  <img src={cancelLogo} alt=\"Cancel\" />\n                </button>\n              </div>\n            ) : (\n              <div className=\"content\">{tweet.content}</div>\n            )}\n          </div>\n          {account === tweet.author && renderEditButtons(tweet)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Tweets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}