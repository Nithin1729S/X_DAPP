{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Codes/Projects/X_dApp/src/components/Tweets.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport moment from 'moment';\nmoment().utcOffset(330).format();\nimport \"../stylesheet/style.css\";\nimport deleteLogo from '../images/delete.png';\nimport editLogo from '../images/edit.png';\nimport saveLogo from '../images/save.png';\nimport cancelLogo from '../images/cancel.png';\nimport '../stylesheet/tweets.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tweets = _ref => {\n  _s();\n  let {\n    tweets,\n    shortAddress,\n    account,\n    deleteTweet,\n    editTweet,\n    likeTweet,\n    unlikeTweet\n  } = _ref;\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const [likedTweets, setLikedTweets] = useState({});\n  const handleEdit = (tweetId, content, author) => {\n    if (author === account) {\n      setEditMode(tweetId);\n      setNewContent(content);\n    }\n  };\n  const handleSaveEdit = (tweetId, author) => {\n    if (author === account) {\n      editTweet(tweetId, newContent);\n      setEditMode(null);\n      setNewContent(\"\");\n    }\n  };\n  const renderEditButtons = tweet => {\n    if (editMode === tweet.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(tweet.id, tweet.content, tweet.author),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editLogo,\n            alt: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTweet(tweet.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deleteLogo,\n            alt: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweetsContainer\",\n    children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"user-icon\",\n        src: \"https://api.multiavatar.com/\".concat(tweet.author, \".svg\"),\n        alt: \"User Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: tweet.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), editMode === tweet.id && tweet.author == account ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newContent,\n            onChange: e => setNewContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveEdit(tweet.id, tweet.author),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: saveLogo,\n              alt: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditMode(null),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cancelLogo,\n              alt: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new moment(Number(tweet.timestamp) * 1000).toLocaleString().split(' GMT')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), account === tweet.author && renderEditButtons(tweet), console.log(tweet)]\n    }, tweet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"xErWgrvs7e0IschX9yNp0bagUno=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["useState","moment","utcOffset","format","deleteLogo","editLogo","saveLogo","cancelLogo","jsxDEV","_jsxDEV","Fragment","_Fragment","Tweets","_ref","_s","tweets","shortAddress","account","deleteTweet","editTweet","likeTweet","unlikeTweet","editMode","setEditMode","newContent","setNewContent","likedTweets","setLikedTweets","handleEdit","tweetId","content","author","handleSaveEdit","renderEditButtons","tweet","id","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","concat","displayName","value","onChange","e","target","Number","timestamp","toLocaleString","split","console","log","_c","$RefreshReg$"],"sources":["/home/nithin/Codes/Projects/X_dApp/src/components/Tweets.js"],"sourcesContent":["import { useState } from \"react\";\nimport moment from 'moment';\nmoment().utcOffset(330).format()\nimport \"../stylesheet/style.css\";\nimport deleteLogo from '../images/delete.png';\nimport editLogo from '../images/edit.png';\nimport saveLogo from '../images/save.png';\nimport cancelLogo from '../images/cancel.png';\nimport '../stylesheet/tweets.css'\n\nconst Tweets = ({ tweets, shortAddress, account, deleteTweet, editTweet ,likeTweet,unlikeTweet}) => {\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const [likedTweets, setLikedTweets] = useState({});\n\n  const handleEdit = (tweetId, content, author) => {\n    if (author === account) {\n      setEditMode(tweetId);\n      setNewContent(content);\n    }\n  };\n\n  const handleSaveEdit = (tweetId, author) => {\n    if (author === account) {\n      editTweet(tweetId, newContent);\n      setEditMode(null);\n      setNewContent(\"\");\n    }\n\n  };\n\n  const renderEditButtons = (tweet) => {\n    if (editMode === tweet.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return (\n        <div className=\"tweet-actions\">\n          <button onClick={() => handleEdit(tweet.id, tweet.content, tweet.author)}>\n            <img src={editLogo} alt=\"Edit\" />\n          </button>\n          <button onClick={() => deleteTweet(tweet.id)}>\n            <img src={deleteLogo} alt=\"Delete\" />\n          </button>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"tweetsContainer\">\n      {tweets.map((tweet) => (\n        <div key={tweet.id} className=\"tweet\">\n          <img\n            className=\"user-icon\"\n            src={`https://api.multiavatar.com/${tweet.author}.svg`}\n            alt=\"User Icon\"\n          />\n          <div className=\"tweet-inner\">\n\n\n\n            <div className=\"author\">{tweet.displayName}</div>\n\n\n            {(editMode === tweet.id && tweet.author == account) ? (\n\n\n\n              <div className=\"editArea\">\n                <textarea\n                  value={newContent}\n                  onChange={(e) => setNewContent(e.target.value)}\n                />\n                <button onClick={() => handleSaveEdit(tweet.id, tweet.author)}>\n                  <img src={saveLogo} alt=\"Save\" />\n                </button>\n                <button onClick={() => setEditMode(null)}>\n                  <img src={cancelLogo} alt=\"Cancel\" />\n                </button>\n              </div>\n            )\n\n\n              : (\n\n\n                <>\n                  <div className=\"content\">{tweet.content}</div>\n                  <div className=\"date\">{new moment(Number(tweet.timestamp) * 1000).toLocaleString().split(' GMT')[0]}</div>\n                </>\n              )}\n          </div>\n          {account === tweet.author && renderEditButtons(tweet)}\n          {console.log(tweet)}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Tweets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}