{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Documents/X_dApp/src/components/Tweets.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweets = _ref => {\n  _s();\n  let {\n    tweets,\n    shortAddress,\n    account,\n    deleteTweet,\n    editTweet\n  } = _ref;\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const handleEdit = (tweetId, content) => {\n    setEditMode(tweetId);\n    setNewContent(content);\n  };\n  const handleSaveEdit = tweetId => {\n    editTweet(tweetId, newContent);\n    setEditMode(null);\n    setNewContent(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweetsContainer\",\n    children: tweets.map((tweet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"user-icon\",\n        src: \"https://api.multiavatar.com/\".concat(tweet.author, \".svg\"),\n        alt: \"User Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: tweet.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), editMode === tweet.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newContent,\n            onChange: e => setNewContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveEdit(tweet.id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditMode(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: tweet.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), account === tweet.author && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(tweet.id, tweet.content),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"edit-i.png\",\n            alt: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), \" Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTweet(tweet.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./delete.png\",\n            alt: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), \" Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"XC8L88Fw1kXM7O7Q70c5/I+RdN0=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Tweets","_ref","_s","tweets","shortAddress","account","deleteTweet","editTweet","editMode","setEditMode","newContent","setNewContent","handleEdit","tweetId","content","handleSaveEdit","id","children","map","tweet","index","className","src","concat","author","alt","fileName","_jsxFileName","lineNumber","columnNumber","displayName","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/nithin/Documents/X_dApp/src/components/Tweets.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./style.css\"\nconst Tweets = ({ tweets, shortAddress, account, deleteTweet, editTweet }) => {\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n\n  const handleEdit = (tweetId, content) => {\n    setEditMode(tweetId);\n    setNewContent(content);\n  };\n\n  const handleSaveEdit = (tweetId) => {\n    editTweet(tweetId, newContent);\n    setEditMode(null);\n    setNewContent(\"\");\n  };\n\n  return (\n    <div id=\"tweetsContainer\">\n      {tweets.map((tweet, index) => (\n        <div key={index} className=\"tweet\">\n          <img\n            className=\"user-icon\"\n            src={`https://api.multiavatar.com/${tweet.author}.svg`}\n            alt=\"User Icon\"\n          />\n          <div className=\"tweet-inner\">\n            <div className=\"author\">{tweet.displayName}</div>\n            {editMode === tweet.id ? (\n              <div>\n                <textarea\n                  value={newContent}\n                  onChange={(e) => setNewContent(e.target.value)}\n                />\n                <button onClick={() => handleSaveEdit(tweet.id)}>Save</button>\n                <button onClick={() => setEditMode(null)}>Cancel</button>\n              </div>\n            ) : (\n              <div className=\"content\">{tweet.content}</div>\n            )}\n          </div>\n          {account === tweet.author && (\n            <div className=\"tweet-actions\">\n            <button onClick={() => handleEdit(tweet.id, tweet.content)}>\n              <img src=\"edit-i.png\" alt=\"Edit\" /> Edit\n            </button>\n            <button onClick={() => deleteTweet(tweet.id)}>\n              <img src=\"./delete.png\" alt=\"Delete\" /> Delete\n            </button>\n          </div>\n          \n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Tweets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}