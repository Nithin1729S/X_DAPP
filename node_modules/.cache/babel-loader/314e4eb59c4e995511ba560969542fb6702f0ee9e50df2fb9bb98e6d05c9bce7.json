{"ast":null,"code":"var _jsxFileName = \"/home/nithin/Codes/Projects/X_dApp/src/components/Tweets.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tweets = _ref => {\n  _s();\n  let {\n    tweets,\n    shortAddress,\n    account,\n    deleteTweet,\n    editTweet,\n    likeTweet,\n    unlikeTweet\n  } = _ref;\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const [likedTweets, setLikedTweets] = useState({});\n  const handleEdit = (tweetId, content, author) => {\n    if (author === account) {\n      setEditMode(tweetId);\n      setNewContent(content);\n    }\n  };\n  const handleSaveEdit = (tweetId, author) => {\n    if (author === account) {\n      editTweet(tweetId, newContent);\n      setEditMode(null);\n      setNewContent(\"\");\n    }\n  };\n  const handleLikeToggle = (author, tweetId) => {\n    const isLiked = likedTweets[tweetId];\n    if (isLiked) {\n      unlikeTweet(author, tweetId);\n    } else {\n      likeTweet(author, tweetId);\n    }\n    setLikedTweets(prev => ({\n      ...prev,\n      [tweetId]: !isLiked\n    }));\n  };\n  const renderEditButtons = tweet => {\n    if (editMode === tweet.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(tweet.id, tweet.content, tweet.author),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: editLogo,\n            alt: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTweet(tweet.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: deleteLogo,\n            alt: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweetsContainer\",\n    children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"user-icon\",\n        src: \"https://api.multiavatar.com/\".concat(tweet.author, \".svg\"),\n        alt: \"User Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: tweet.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), editMode === tweet.id && tweet.author === account ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newContent,\n            onChange: e => setNewContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSaveEdit(tweet.id, tweet.author),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: saveLogo,\n              alt: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditMode(null),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: cancelLogo,\n              alt: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: tweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: new moment(Number(tweet.timestamp) * 1000).toLocaleString().split(' GMT')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), account === tweet.author && renderEditButtons(tweet), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"like-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"like-count\",\n          children: tweet.likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLikeToggle(tweet.author, tweet.id),\n          children: likedTweets[tweet.id] ? 'Unlike' : 'Like'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, tweet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Tweets, \"xErWgrvs7e0IschX9yNp0bagUno=\");\n_c = Tweets;\nexport default Tweets;\nvar _c;\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useState","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Tweets","_ref","_s","tweets","shortAddress","account","deleteTweet","editTweet","likeTweet","unlikeTweet","editMode","setEditMode","newContent","setNewContent","likedTweets","setLikedTweets","handleEdit","tweetId","content","author","handleSaveEdit","handleLikeToggle","isLiked","prev","renderEditButtons","tweet","id","className","children","onClick","src","editLogo","alt","fileName","_jsxFileName","lineNumber","columnNumber","deleteLogo","map","concat","displayName","value","onChange","e","target","saveLogo","cancelLogo","Number","timestamp","toLocaleString","split","likes","_c","$RefreshReg$"],"sources":["/home/nithin/Codes/Projects/X_dApp/src/components/Tweets.js"],"sourcesContent":["import React, { useState } from 'react';\nimport moment from 'moment';\n\nconst Tweets = ({ tweets, shortAddress, account, deleteTweet, editTweet, likeTweet, unlikeTweet }) => {\n  const [editMode, setEditMode] = useState(null);\n  const [newContent, setNewContent] = useState(\"\");\n  const [likedTweets, setLikedTweets] = useState({});\n\n  const handleEdit = (tweetId, content, author) => {\n    if (author === account) {\n      setEditMode(tweetId);\n      setNewContent(content);\n    }\n  };\n\n  const handleSaveEdit = (tweetId, author) => {\n    if (author === account) {\n      editTweet(tweetId, newContent);\n      setEditMode(null);\n      setNewContent(\"\");\n    }\n  };\n\n  const handleLikeToggle = (author, tweetId) => {\n    const isLiked = likedTweets[tweetId];\n    if (isLiked) {\n      unlikeTweet(author, tweetId);\n    } else {\n      likeTweet(author, tweetId);\n    }\n    setLikedTweets((prev) => ({\n      ...prev,\n      [tweetId]: !isLiked,\n    }));\n  };\n\n  const renderEditButtons = (tweet) => {\n    if (editMode === tweet.id) {\n      return null; // Don't render edit and delete buttons during editing\n    } else {\n      return (\n        <div className=\"tweet-actions\">\n          <button onClick={() => handleEdit(tweet.id, tweet.content, tweet.author)}>\n            <img src={editLogo} alt=\"Edit\" />\n          </button>\n          <button onClick={() => deleteTweet(tweet.id)}>\n            <img src={deleteLogo} alt=\"Delete\" />\n          </button>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div id=\"tweetsContainer\">\n      {tweets.map((tweet) => (\n        <div key={tweet.id} className=\"tweet\">\n          <img\n            className=\"user-icon\"\n            src={`https://api.multiavatar.com/${tweet.author}.svg`}\n            alt=\"User Icon\"\n          />\n          <div className=\"tweet-inner\">\n            <div className=\"author\">{tweet.displayName}</div>\n            {(editMode === tweet.id && tweet.author === account) ? (\n              <div className=\"editArea\">\n                <textarea\n                  value={newContent}\n                  onChange={(e) => setNewContent(e.target.value)}\n                />\n                <button onClick={() => handleSaveEdit(tweet.id, tweet.author)}>\n                  <img src={saveLogo} alt=\"Save\" />\n                </button>\n                <button onClick={() => setEditMode(null)}>\n                  <img src={cancelLogo} alt=\"Cancel\" />\n                </button>\n              </div>\n            ) : (\n              <>\n                <div className=\"content\">{tweet.content}</div>\n                <div className=\"date\">{new moment(Number(tweet.timestamp) * 1000).toLocaleString().split(' GMT')[0]}</div>\n              </>\n            )}\n          </div>\n          {account === tweet.author && renderEditButtons(tweet)}\n          <div className=\"like-section\">\n            <div className=\"like-count\">{tweet.likes}</div>\n            <button onClick={() => handleLikeToggle(tweet.author, tweet.id)}>\n              {likedTweets[tweet.id] ? 'Unlike' : 'Like'}\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Tweets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}