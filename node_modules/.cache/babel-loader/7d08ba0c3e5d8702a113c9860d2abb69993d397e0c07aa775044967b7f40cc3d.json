{"ast":null,"code":"import Web3 from\"web3\";import contractABI from\"../contracts/main.json\";import profileContractABI from\"../contracts/user.json\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const contractAddress=\"0x09da336f5c3012996EC0192B84CB9bB3E72d4d82\";const profileContractAddress=\"0x626c3fcf129550FFD7bf73437c0f9508914E2088\";const Connect=_ref=>{let{web3,account,shortAddress,setContract,setAccount,setProfileContract,setWeb3}=_ref;async function switchToSepolia(){try{// Request user to switch to Sepolia\nawait window.ethereum.request({method:\"wallet_switchEthereumChain\",params:[{chainId:\"0xaa36a7\"}]// Chain ID for Sepolia in hexadecimal\n});}catch(switchError){if(switchError.code===4902){try{// If Sepolia is not added to user's MetaMask, add it\nawait window.ethereum.request({method:\"wallet_addEthereumChain\",params:[{chainId:\"0xaa36a7\",chainName:\"Sepolia\",nativeCurrency:{name:\"ETH\",symbol:\"ETH\",decimals:18},rpcUrls:[\"https://rpc.sepolia.org\"]}]});}catch(addError){console.error(\"Failed to add Sepolia network to MetaMask\",addError);}}else{console.error(\"Failed to switch to Sepolia network\",switchError);}}}async function connectWallet(){if(window.ethereum){try{await window.ethereum.enable();const networkId=await window.ethereum.request({method:\"net_version\"});if(networkId!==\"100\"){// Network ID for Sepolia\nawait switchToSepolia();}// user enables the app to connect to MetaMask\nconst tempWeb3=new Web3(window.ethereum);setWeb3(tempWeb3);const contractInstance=new tempWeb3.eth.Contract(contractABI,contractAddress);const profileContractInstance=new tempWeb3.eth.Contract(profileContractABI,profileContractAddress);setProfileContract(profileContractInstance);console.log(\"HIIIIIII\");const accounts=await tempWeb3.eth.getAccounts();console.log(\"aCCOUNTS\",accounts);if(accounts.length>0){setContract(contractInstance);setAccount(accounts[0]);}console.log(\"NAHHHHHH\");}catch(error){console.error(error);}}else{console.error(\"No web3 provider detected\");}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"connect\",children:!account?/*#__PURE__*/_jsx(\"button\",{id:\"connectWalletBtn\",onClick:connectWallet,children:\"Connect Wallet\"}):/*#__PURE__*/_jsxs(\"div\",{id:\"userAddress\",children:[\"Connected: \",shortAddress(account)]})}),/*#__PURE__*/_jsx(\"div\",{id:\"connectMessage\",children:!account?\"Please connect your wallet to tweet.\":\"\"})]});};export default Connect;","map":{"version":3,"names":["Web3","contractABI","profileContractABI","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","contractAddress","profileContractAddress","Connect","_ref","web3","account","shortAddress","setContract","setAccount","setProfileContract","setWeb3","switchToSepolia","window","ethereum","request","method","params","chainId","switchError","code","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","addError","console","error","connectWallet","enable","networkId","tempWeb3","contractInstance","eth","Contract","profileContractInstance","log","accounts","getAccounts","length","children","className","id","onClick"],"sources":["/home/nithin/Documents/X_dApp/src/components/Connect.js"],"sourcesContent":["import Web3 from \"web3\";\nimport contractABI from \"../contracts/main.json\";\nimport profileContractABI from \"../contracts/user.json\";\n\nconst contractAddress = \"0x09da336f5c3012996EC0192B84CB9bB3E72d4d82\";\nconst profileContractAddress = \"0x626c3fcf129550FFD7bf73437c0f9508914E2088\";\n\nconst Connect = ({\n  web3,\n  account,\n  shortAddress,\n  setContract,\n  setAccount,\n  setProfileContract,\n  setWeb3\n}) => {\n  async function switchToSepolia() {\n    try {\n      // Request user to switch to Sepolia\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: \"0xaa36a7\" }] // Chain ID for Sepolia in hexadecimal\n      });\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          // If Sepolia is not added to user's MetaMask, add it\n          await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n              {\n                chainId: \"0xaa36a7\",\n                chainName: \"Sepolia\",\n                nativeCurrency: {\n                  name: \"ETH\",\n                  symbol: \"ETH\",\n                  decimals: 18\n                },\n                rpcUrls: [\"https://rpc.sepolia.org\"]\n              }\n            ]\n          });\n        } catch (addError) {\n          console.error(\"Failed to add Sepolia network to MetaMask\", addError);\n        }\n      } else {\n        console.error(\"Failed to switch to Sepolia network\", switchError);\n      }\n    }\n  }\n\n  async function connectWallet() {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.enable();\n        const networkId = await window.ethereum.request({\n          method: \"net_version\"\n        });\n\n        if (networkId !== \"100\") {\n          // Network ID for Sepolia\n          await switchToSepolia();\n        }\n\n        // user enables the app to connect to MetaMask\n        const tempWeb3 = new Web3(window.ethereum);\n        setWeb3(tempWeb3);\n        const contractInstance = new tempWeb3.eth.Contract(\n          contractABI,\n          contractAddress\n        );\n\n        const profileContractInstance = new tempWeb3.eth.Contract(\n          profileContractABI,\n          profileContractAddress\n        );\n        setProfileContract(profileContractInstance);\n        console.log(\"HIIIIIII\");\n        const accounts = await tempWeb3.eth.getAccounts();\n        console.log(\"aCCOUNTS\", accounts);\n        if (accounts.length > 0) {\n          setContract(contractInstance);\n          setAccount(accounts[0]);\n        }\n        console.log(\"NAHHHHHH\");\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      console.error(\"No web3 provider detected\");\n    }\n  }\n\n  return (\n    <>\n      <div className=\"connect\">\n        {!account ? (\n          <button id=\"connectWalletBtn\" onClick={connectWallet}>\n            Connect Wallet\n          </button>\n        ) : (\n          <div id=\"userAddress\">Connected: {shortAddress(account)}</div>\n        )}\n      </div>\n      <div id=\"connectMessage\">\n        {!account ? \"Please connect your wallet to tweet.\" : \"\"}\n      </div>\n    </>\n  );\n};\n\nexport default Connect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}